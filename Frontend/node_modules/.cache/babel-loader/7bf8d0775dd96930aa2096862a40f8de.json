{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nazmus Shakib\\\\EShop\\\\frontend\\\\src\\\\screens\\\\CartScreen.js\";\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\nimport Message from '../conponents/Message';\nimport { addToCart } from '../actions/cartActions';\n\nconst CartScreen = ({\n  match,\n  location,\n  history\n}) => {\n  const productId = match.params.id;\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1;\n  const dispatch = useDispatch();\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, [dispatch, productId, qty]);\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }\n  }, \"Shopping Cart\"), cartItems.length === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }, \"Your cart is empty \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }\n  }, \"Go Back\")) : /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 23\n    }\n  }, cartItems.map(item => /*#__PURE__*/React.createElement(ListGroup.item, {\n    key: item.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: item.image,\n    alt: item.name,\n    fluid: true,\n    rounded: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/product/${item.product}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"$\", item.price), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    value: qty,\n    onChange: e => dispatch(addToCart(item.product, Number(e.target.value))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, [...Array(item.countInStock).keys()].map(x => /*#__PURE__*/React.createElement(\"option\", {\n    key: x + 1,\n    value: x + 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 45\n    }\n  }, x + 1)))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }\n  }))))))), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }));\n};\n\nexport default CartScreen;","map":{"version":3,"sources":["C:/Users/Nazmus Shakib/EShop/frontend/src/screens/CartScreen.js"],"names":["React","useEffect","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Form","Button","Card","Message","addToCart","CartScreen","match","location","history","productId","params","id","qty","search","Number","split","dispatch","cart","state","cartItems","length","map","item","product","image","name","price","e","target","value","Array","countInStock","keys","x"],"mappings":"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","sourcesContent":["import React,{ useEffect} from 'react'\r\nimport { Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row ,Col, ListGroup,Image, Form, Button, Card} from 'react-bootstrap'\r\nimport Message from '../conponents/Message'\r\nimport { addToCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history}) => {\r\n    const productId=match.params.id\r\n    const qty=location.search ? Number(location.search.split('=')[1]): 1\r\n\r\n    const dispatch= useDispatch()\r\n\r\n    const cart=useSelector((state)=> state.cart)\r\n    const {cartItems}=cart\r\n    useEffect(()=> {\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    }, [dispatch,productId,qty])\r\n    return (\r\n        <Row>\r\n               <Col md={8}>\r\n                  <h1>Shopping Cart</h1>\r\n                  {cartItems.length===0 ? (\r\n                      <Message>\r\n                          Your cart is empty <Link to='/'>Go Back</Link>\r\n                      </Message>\r\n                  ) : (\r\n                      <ListGroup variant='flush'>\r\n                            {cartItems.map(item=>(\r\n                                <ListGroup.item key={item.product}>\r\n                                        <Row>\r\n                                <Col md={2}>\r\n                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                </Col>      \r\n                                <Col md={3}>\r\n                            <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                </Col>\r\n                            <Col md={2}>${item.price}</Col>\r\n                            <Col>\r\n                            <Form.Control as='select' value={qty} onChange={(e)=> dispatch(addToCart(item.product,Number(e.target.value)))} >\r\n                                       { [...Array(item.countInStock).keys()].map((x)=>(\r\n                                            <option key={x+1} value={x+1}>{x+1}</option>\r\n                                        )) }\r\n\r\n                                    </Form.Control>\r\n                            </Col>\r\n                            \r\n                            <Col md={2}>\r\n                                    <Button type>\r\n\r\n                                    </Button>\r\n                            </Col>\r\n                                        </Row>\r\n                                </ListGroup.item>\r\n                            ))}\r\n                      </ListGroup>\r\n                  )}\r\n              </Col>\r\n              <Col md={2}></Col>\r\n              <Col md={2}></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n"]},"metadata":{},"sourceType":"module"}