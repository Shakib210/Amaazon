{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducer, productDetailsReducer } from './reducers/productReducer';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\nimport { orderCreateReducer } from './reducers/orderReducer';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/Nazmus Shakib/EShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAsCC,eAAtC,QAA6D,OAA7D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,QAAyD,2BAAzD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,kBAAhD,EAAoEC,wBAApE,QAAoG,wBAApG;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA,MAAMC,OAAO,GAACZ,eAAe,CAAC;AAC1Ba,EAAAA,WAAW,EAAET,kBADa;AAE1BU,EAAAA,cAAc,EAAET,qBAFU;AAG1BU,EAAAA,IAAI,EAAET,WAHoB;AAI1BU,EAAAA,SAAS,EAAET,gBAJe;AAK1BU,EAAAA,YAAY,EAAET,mBALY;AAM1BU,EAAAA,WAAW,EAAET,kBANa;AAO1BU,EAAAA,iBAAiB,EAAET,wBAPO;AAQ1BU,EAAAA,WAAW,EAAET;AARa,CAAD,CAA7B;AAWA,MAAMU,oBAAoB,GAACC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACsB,EADjD;AAGA,MAAMG,mBAAmB,GAACJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACsB,IADhD;AAGA,MAAMI,0BAA0B,GAACL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACsB,EADvD;AAGA,MAAMK,YAAY,GAAC;AACfb,EAAAA,IAAI,EAAE;AAACc,IAAAA,SAAS,EAAER,oBAAZ;AACNS,IAAAA,eAAe,EAAEH;AADX,GADS;AAIfX,EAAAA,SAAS,EAAC;AAACe,IAAAA,QAAQ,EAACL;AAAV;AAJK,CAAnB;AAMA,MAAMM,UAAU,GAAC,CAAC9B,KAAD,CAAjB;AACA,MAAM+B,KAAK,GAAClC,WAAW,CAACa,OAAD,EAASgB,YAAT,EAAsBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CAAzC,CAAvB;AAEA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers,applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer} from './reducers/productReducer'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer'\r\nimport { orderCreateReducer } from './reducers/orderReducer'\r\n\r\nconst reducer=combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer\r\n})\r\n\r\nconst cartItemsFromStorage=localStorage.getItem('cartItems')\r\n? JSON.parse(localStorage.getItem('cartItems')): []\r\n\r\nconst userInfoFromStorage=localStorage.getItem('userInfo')\r\n? JSON.parse(localStorage.getItem('userInfo')): null\r\n\r\nconst shippingAddressFromStorage=localStorage.getItem('shippingAddress')\r\n? JSON.parse(localStorage.getItem('shippingAddress')): {}\r\n\r\nconst initialState={\r\n    cart: {cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage\r\n},\r\n    userLogin:{userInfo:userInfoFromStorage},\r\n}\r\nconst middleware=[thunk]\r\nconst store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}